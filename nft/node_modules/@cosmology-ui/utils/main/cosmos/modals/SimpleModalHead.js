"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleModalHeadBaseStyle = exports.SimpleModalHead = void 0;
var _react = require("@chakra-ui/react");
var _react2 = _interopRequireWildcard(require("react"));
var _fi = require("react-icons/fi");
var _index = require("../../index");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var SimpleModalHeadBaseStyle = function SimpleModalHeadBaseStyle(theme, backButton) {
  return {
    w: 'full',
    alignItems: 'center',
    h: 'fit-content',
    mb: 1,
    p: 4,
    pb: 1.5,
    '>.modal-header-text': {
      flex: 1,
      mr: backButton ? 0 : -10,
      fontSize: 'md',
      fontWeight: 'semibold',
      textAlign: 'center',
      color: "simple-modal-head-text-color-".concat(theme)
    },
    '>.icon-button': {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      borderRadius: 'md',
      color: "simple-modal-head-button-icon-color-".concat(theme),
      minW: 8,
      minH: 8,
      maxW: 8,
      maxH: 8,
      h: 8,
      w: 8,
      p: 0,
      _focus: {
        outline: 'none'
      },
      '>svg': {
        w: 5,
        h: 5
      }
    }
  };
};
exports.SimpleModalHeadBaseStyle = SimpleModalHeadBaseStyle;
var SimpleModalHead = function SimpleModalHead(_ref) {
  var title = _ref.title,
    backButton = _ref.backButton,
    className = _ref.className,
    styleProps = _ref.styleProps,
    onBack = _ref.onBack,
    onClose = _ref.onClose;
  var _useContext = (0, _react2.useContext)(_index.ThemeContext),
    theme = _useContext.theme;
  return /*#__PURE__*/_react2["default"].createElement(_react.Stack, {
    isInline: true,
    className: className,
    sx: styleProps ? styleProps : SimpleModalHeadBaseStyle(theme, backButton ? true : false)
  }, backButton ? /*#__PURE__*/_react2["default"].createElement(_react.IconButton, {
    "aria-label": "back",
    className: "icon-button",
    variant: "ghost",
    icon: /*#__PURE__*/_react2["default"].createElement(_fi.FiChevronLeft, null),
    onClick: onBack
  }) : undefined, /*#__PURE__*/_react2["default"].createElement(_react.Text, {
    className: "modal-header-text"
  }, title), /*#__PURE__*/_react2["default"].createElement(_react.IconButton, {
    "aria-label": "close",
    className: "icon-button",
    variant: "ghost",
    icon: /*#__PURE__*/_react2["default"].createElement(_fi.FiX, null),
    onClick: onClose
  }));
};
exports.SimpleModalHead = SimpleModalHead;