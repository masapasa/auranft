"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleConnectModalBaseStyle = exports.SimpleConnectModal = void 0;
var _react = require("@chakra-ui/react");
var _framerMotion = require("framer-motion");
var _react2 = _interopRequireWildcard(require("react"));
var _reactResizeDetector = require("react-resize-detector");
var _index = require("../../index");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var SimpleConnectModalBaseStyle = function SimpleConnectModalBaseStyle(theme) {
  return {
    position: 'relative',
    alignSelf: 'center',
    borderRadius: 'xl',
    overflow: 'hidden',
    w: 'fit-content',
    mx: 4,
    bg: "simple-modal-background-color-".concat(theme),
    color: "simple-modal-text-color-".concat(theme),
    _focus: {
      outline: 'none'
    }
  };
};
exports.SimpleConnectModalBaseStyle = SimpleConnectModalBaseStyle;
var SimpleConnectModal = function SimpleConnectModal(_ref) {
  var initialRef = _ref.initialRef,
    modalView = _ref.modalView,
    className = _ref.className,
    styleProps = _ref.styleProps,
    modalOpen = _ref.modalOpen,
    modalOnClose = _ref.modalOnClose;
  var _useContext = (0, _react2.useContext)(_index.ThemeContext),
    theme = _useContext.theme;
  var controls = (0, _framerMotion.useAnimationControls)();
  var contentControls = (0, _framerMotion.useAnimationControls)();
  var _useResizeDetector = (0, _reactResizeDetector.useResizeDetector)(),
    width = _useResizeDetector.width,
    height = _useResizeDetector.height,
    nodeRef = _useResizeDetector.ref;
  (0, _react2.useEffect)(function () {
    if (modalOpen) {
      controls.set('initial');
      contentControls.set('initial');
      controls.start('animate');
      contentControls.start('animate');
    }
  }, [modalView, modalOpen, controls, contentControls]);
  return /*#__PURE__*/_react2["default"].createElement(_react.Modal, {
    initialFocusRef: initialRef,
    blockScrollOnMount: false,
    isOpen: modalOpen,
    isCentered: true,
    onClose: modalOnClose
  }, /*#__PURE__*/_react2["default"].createElement(_react.ModalOverlay, null), /*#__PURE__*/_react2["default"].createElement(_react.ModalContent, {
    ref: nodeRef,
    className: className,
    sx: styleProps ? styleProps : SimpleConnectModalBaseStyle(theme),
    motionProps: {
      custom: {
        width: width ? width : 290,
        height: height ? height : 250
      },
      animate: controls,
      variants: _index.ModalVariants
    }
  }, /*#__PURE__*/_react2["default"].createElement(_index.AnimateBox, {
    animate: contentControls,
    variants: _index.ModalContentVariants
  }, modalView)));
};
exports.SimpleConnectModal = SimpleConnectModal;