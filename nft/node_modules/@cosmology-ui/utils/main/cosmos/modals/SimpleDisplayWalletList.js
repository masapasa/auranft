"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleDisplayWalletListItemBaseStyle = exports.SimpleDisplayWalletListBaseStyle = exports.SimpleDisplayWalletListBaseShadowAnimate = exports.SimpleDisplayWalletListAnimateBaseStyle = exports.SimpleDisplayWalletList = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("@chakra-ui/react");
var _react2 = _interopRequireWildcard(require("react"));
var _index = require("../../index");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var SimpleDisplayWalletListBaseStyle = function SimpleDisplayWalletListBaseStyle(theme, dataLength) {
  return {
    position: 'relative',
    justifyContent: dataLength > 1 ? 'start' : 'center',
    gridTemplateColumns: {
      base: '1fr',
      md: dataLength > 1 ? '1fr 1fr' : 'var(--chakra-space-36)'
    },
    gridTemplateRows: {
      base: 'min-content',
      md: 'auto'
    },
    columnGap: 2.5,
    rowGap: 1,
    maxH: 80,
    minH: {
      base: 24,
      md: 36
    },
    w: 80,
    overflowY: 'scroll',
    py: 0.5,
    px: 4,
    mt: 0.5,
    scrollbarWidth: 'none',
    // for firefox
    '::-webkit-scrollbar': {
      display: 'none' // for chrome
    },

    '~.simple-display-wallet-list-animate-shadow': {
      position: 'absolute',
      bottom: 4,
      w: 'full',
      background: "simple-display-wallet-list-shadow-background-color-".concat(theme)
    }
  };
};
exports.SimpleDisplayWalletListBaseStyle = SimpleDisplayWalletListBaseStyle;
var SimpleDisplayWalletListItemBaseStyle = function SimpleDisplayWalletListItemBaseStyle(theme, buttonShape, index) {
  return {
    gridColumn: {
      base: 'span 2',
      md: index > 1 ? 'span 2' : 'auto'
    },
    display: 'flex',
    flexDirection: {
      base: 'row',
      md: buttonShape === _index.ButtonShape.Square ? 'column' : 'row'
    },
    justifyContent: {
      base: 'start',
      md: buttonShape === _index.ButtonShape.Square ? 'center' : 'start'
    },
    alignItems: 'center',
    position: 'relative',
    w: 'full',
    h: 'full',
    p: 2,
    py: {
      md: buttonShape === _index.ButtonShape.Square ? 7 : 2
    },
    mt: {
      md: buttonShape === _index.ButtonShape.Square ? 0 : 1
    },
    borderRadius: 'md',
    whiteSpace: 'break-spaces',
    fontSize: 'sm',
    fontWeight: 'normal',
    lineHeight: 'none',
    textAlign: {
      base: 'start',
      md: buttonShape === _index.ButtonShape.Square ? 'center' : 'start'
    },
    transition: 'all .1s ease-in-out',
    color: "simple-display-wallet-list-button-text-color-".concat(theme),
    bg: "simple-display-wallet-list-button-background-color-".concat(theme),
    _hover: {
      boxShadow: '0 0 0 1px #6A66FF',
      bg: "simple-display-wallet-list-button-hover-background-color-".concat(theme)
    },
    _focus: {
      borderRadius: 'md',
      boxShadow: '0 0 0 1px #6A66FF'
    },
    '>.simple-display-wallet-list-text': {
      flex: buttonShape === _index.ButtonShape.Rectangle ? 1 : 'none'
    },
    '>.simple-display-wallet-list-icon': {
      position: 'relative',
      mr: {
        base: 4,
        md: buttonShape === _index.ButtonShape.Square ? 0 : 4
      },
      mb: {
        base: 0,
        md: buttonShape === _index.ButtonShape.Square ? 2.5 : 0
      },
      w: {
        base: 8,
        md: buttonShape === _index.ButtonShape.Square ? 14 : 8
      },
      h: {
        base: 8,
        md: buttonShape === _index.ButtonShape.Square ? 14 : 8
      },
      minW: {
        base: 8,
        md: buttonShape === _index.ButtonShape.Square ? 14 : 8
      },
      minH: {
        base: 8,
        md: buttonShape === _index.ButtonShape.Square ? 14 : 8
      },
      maxW: {
        base: 8,
        md: buttonShape === _index.ButtonShape.Square ? 14 : 8
      },
      maxH: {
        base: 8,
        md: buttonShape === _index.ButtonShape.Square ? 14 : 8
      },
      '>.simple-display-wallet-list-sub-icon': {
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        overflow: 'hidden',
        border: '2px solid',
        bg: "simple-display-wallet-list-icon-border-color-".concat(theme),
        borderColor: "simple-display-wallet-list-icon-border-color-".concat(theme),
        borderRadius: 'full',
        position: 'absolute',
        bottom: -1.5,
        right: -2,
        mr: 0,
        w: 6,
        h: 6,
        minW: 6,
        minH: 6,
        maxW: 6,
        maxH: 6
      }
    },
    '>.simple-display-wallet-list-sub-icon': {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      overflow: 'hidden',
      border: 'none',
      borderRadius: 'full',
      position: 'static',
      bottom: -1.5,
      right: -2,
      mr: 2,
      w: 5,
      h: 5,
      minW: 5,
      minH: 5,
      maxW: 5,
      maxH: 5
    },
    '+.simple-display-wallet-button:hover>.simple-display-wallet-list-icon>.simple-display-wallet-list-sub-icon': {
      bg: "simple-display-wallet-list-button-hover-border-color-".concat(theme),
      borderColor: "simple-display-wallet-list-hover-icon-border-color-".concat(theme)
    }
  };
};
exports.SimpleDisplayWalletListItemBaseStyle = SimpleDisplayWalletListItemBaseStyle;
var SimpleDisplayWalletListAnimateBaseStyle = function SimpleDisplayWalletListAnimateBaseStyle(theme) {
  return {
    position: 'absolute',
    bottom: 4,
    w: 'full',
    background: "simple-display-wallet-list-shadow-background-color-".concat(theme)
  };
};
exports.SimpleDisplayWalletListAnimateBaseStyle = SimpleDisplayWalletListAnimateBaseStyle;
var SimpleDisplayWalletListBaseShadowAnimate = function SimpleDisplayWalletListBaseShadowAnimate(displayBlur) {
  return displayBlur ? {
    opacity: 1,
    height: 24,
    transition: {
      type: 'spring',
      duration: 0.1
    }
  } : {
    height: 0,
    opacity: 0,
    transition: {
      type: 'spring',
      duration: 0.2
    }
  };
};
exports.SimpleDisplayWalletListBaseShadowAnimate = SimpleDisplayWalletListBaseShadowAnimate;
var SimpleDisplayWalletList = function SimpleDisplayWalletList(_ref) {
  var initialFocus = _ref.initialFocus,
    walletsData = _ref.walletsData,
    className = _ref.className,
    listStyleProps = _ref.styleProps,
    _ref$shadowAnimatePro = _ref.shadowAnimateProps,
    shadowAnimateProps = _ref$shadowAnimatePro === void 0 ? SimpleDisplayWalletListBaseShadowAnimate(false) : _ref$shadowAnimatePro;
  var _useContext = (0, _react2.useContext)(_index.ThemeContext),
    theme = _useContext.theme;
  var listRef = (0, _react2.useRef)(null);
  var _useState = (0, _react2.useState)(false),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    displayBlur = _useState2[0],
    setDisplayBlur = _useState2[1];
  var _useState3 = (0, _react2.useState)(shadowAnimateProps),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    animateShadow = _useState4[0],
    setAnimateShadow = _useState4[1];
  (0, _react2.useEffect)(function () {
    if (listRef.current) {
      if (listRef.current.clientHeight < 320) setDisplayBlur(false);
      if (listRef.current.clientHeight >= 320) setDisplayBlur(true);
      var scrollHandler = function scrollHandler() {
        var height = listRef.current ? Math.abs(listRef.current.scrollHeight - listRef.current.clientHeight - listRef.current.scrollTop) : 0;
        if (height < 1) setDisplayBlur(false);
        if (height >= 1) setDisplayBlur(true);
      };
      listRef.current.addEventListener('scroll', scrollHandler);
    }
  }, [listRef, walletsData]);
  (0, _react2.useEffect)(function () {
    setAnimateShadow(SimpleDisplayWalletListBaseShadowAnimate(displayBlur));
  }, [displayBlur]);
  return /*#__PURE__*/_react2["default"].createElement(_react.Box, {
    className: className,
    position: "relative",
    pb: 4
  }, /*#__PURE__*/_react2["default"].createElement(_react.Grid, {
    ref: listRef,
    sx: listStyleProps ? listStyleProps : SimpleDisplayWalletListBaseStyle(theme, walletsData.length),
    gap: 0
  }, walletsData.map(function (_ref2, i) {
    var name = _ref2.name,
      prettyName = _ref2.prettyName,
      logo = _ref2.logo,
      subLogo = _ref2.subLogo,
      buttonShape = _ref2.buttonShape,
      styleProps = _ref2.styleProps,
      onClick = _ref2.onClick;
    return /*#__PURE__*/_react2["default"].createElement(_react.GridItem, {
      id: name,
      key: name,
      as: "button",
      className: "simple-display-wallet-button",
      ref: i === 0 ? initialFocus : null,
      sx: styleProps ? styleProps : SimpleDisplayWalletListItemBaseStyle(theme, buttonShape, i),
      onClick: onClick
    }, /*#__PURE__*/_react2["default"].createElement(_react.Box, {
      className: "simple-display-wallet-list-icon"
    }, typeof logo === 'string' ? /*#__PURE__*/_react2["default"].createElement(_react.Image, {
      src: logo,
      alt: prettyName
    }) : /*#__PURE__*/_react2["default"].createElement(_react.Icon, {
      as: logo
    }), subLogo && buttonShape === _index.ButtonShape.Square ? /*#__PURE__*/_react2["default"].createElement(_react.Flex, {
      className: "simple-display-wallet-list-sub-icon"
    }, typeof subLogo === 'string' ? /*#__PURE__*/_react2["default"].createElement(_react.Image, {
      src: subLogo,
      alt: "wallet-icon"
    }) : /*#__PURE__*/_react2["default"].createElement(_react.Icon, {
      as: subLogo,
      w: "full",
      h: "full"
    })) : undefined), /*#__PURE__*/_react2["default"].createElement(_react.Text, {
      className: "simple-display-wallet-list-text"
    }, prettyName), subLogo && buttonShape !== _index.ButtonShape.Square ? /*#__PURE__*/_react2["default"].createElement(_react.Box, {
      className: "simple-display-wallet-list-sub-icon"
    }, typeof subLogo === 'string' ? /*#__PURE__*/_react2["default"].createElement(_react.Image, {
      src: subLogo,
      alt: "wallet-connect"
    }) : /*#__PURE__*/_react2["default"].createElement(_react.Icon, {
      as: subLogo
    })) : undefined);
  })), /*#__PURE__*/_react2["default"].createElement(_index.AnimateGridItem, {
    className: "simple-display-wallet-list-animate-shadow",
    initial: false,
    animate: animateShadow,
    style: {
      marginTop: 0
    }
  }));
};
exports.SimpleDisplayWalletList = SimpleDisplayWalletList;