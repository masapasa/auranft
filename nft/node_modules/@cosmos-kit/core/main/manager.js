"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WalletManager = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _bowser = _interopRequireDefault(require("bowser"));
var _events = _interopRequireDefault(require("events"));
var _bases = require("./bases");
var _repository = require("./repository");
var _types = require("./types");
var _utils = require("./utils");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var WalletManager = /*#__PURE__*/function (_StateBase) {
  (0, _inherits2["default"])(WalletManager, _StateBase);
  var _super = _createSuper(WalletManager);
  // only allow one wallet type to connect at one time. i.e. you cannot connect keplr and cosmostation at the same time
  // stands for `globalIsLazy` setting

  function WalletManager(_chains, _assetLists, wallets, logger, defaultNameService, walletConnectOptions, _signerOptions, endpointOptions, sessionOptions) {
    var _this;
    (0, _classCallCheck2["default"])(this, WalletManager);
    _this = _super.call(this);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "chainRecords", []);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "walletRepos", []);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "defaultNameService", 'icns');
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "mainWallets", []);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "coreEmitter", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "walletConnectOptions", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "session", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "repelWallet", true);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "isLazy", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "addChains", function (chains, assetLists, signerOptions, endpoints) {
      var newChainRecords = chains.map(function (chain) {
        return (0, _utils.convertChain)(chain, assetLists, signerOptions, endpoints === null || endpoints === void 0 ? void 0 : endpoints[chain.chain_name], _this.isLazy, _this.logger);
      });
      newChainRecords.forEach(function (chainRecord) {
        var index = _this.chainRecords.findIndex(function (chainRecord2) {
          return chainRecord2.name !== chainRecord.name;
        });
        if (index == -1) {
          _this.chainRecords.push(chainRecord);
        } else {
          _this.chainRecords[index] = chainRecord;
        }
      });
      _this.mainWallets.forEach(function (wallet) {
        wallet.setChains(newChainRecords, false);
      });
      newChainRecords.forEach(function (chainRecord) {
        var _this$actions, _this$actions2;
        var repo = new _repository.WalletRepo(chainRecord, _this.mainWallets.map(function (_ref) {
          var getChainWallet = _ref.getChainWallet;
          return getChainWallet(chainRecord.name);
        }));
        repo.setActions({
          viewOpen: (_this$actions = _this.actions) === null || _this$actions === void 0 ? void 0 : _this$actions.viewOpen,
          viewWalletRepo: (_this$actions2 = _this.actions) === null || _this$actions2 === void 0 ? void 0 : _this$actions2.viewWalletRepo
        });
        repo.wallets.forEach(function (w) {
          var _this$actions3, _this$actions4, _this$actions5;
          w.setActions({
            data: (_this$actions3 = _this.actions) === null || _this$actions3 === void 0 ? void 0 : _this$actions3.data,
            state: (_this$actions4 = _this.actions) === null || _this$actions4 === void 0 ? void 0 : _this$actions4.state,
            message: (_this$actions5 = _this.actions) === null || _this$actions5 === void 0 ? void 0 : _this$actions5.message
          });
        });
        repo.logger = _this.logger;
        repo.repelWallet = _this.repelWallet;
        repo.session = _this.session;
        var index = _this.walletRepos.findIndex(function (repo2) {
          return repo2.chainName !== repo.chainName;
        });
        if (index == -1) {
          _this.walletRepos.push(repo);
        } else {
          _this.walletRepos[index] = repo;
        }
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "on", function (event, handler) {
      _this.coreEmitter.on(event, handler);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "off", function (event, handler) {
      _this.coreEmitter.off(event, handler);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getMainWallet", function (walletName) {
      var wallet = _this.mainWallets.find(function (w) {
        return w.walletName === walletName;
      });
      if (!wallet) {
        throw new Error("Wallet ".concat(walletName, " is not provided."));
      }
      return wallet;
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getWalletRepo", function (chainName) {
      var walletRepo = _this.walletRepos.find(function (wr) {
        return wr.chainName === chainName;
      });
      if (!walletRepo) {
        throw new Error("Chain ".concat(chainName, " is not provided."));
      }
      return walletRepo;
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getChainWallet", function (chainName, walletName) {
      var chainWallet = _this.getMainWallet(walletName).getChainWallet(chainName);
      if (!chainWallet) {
        throw new Error("".concat(chainName, " is not provided!"));
      }
      return chainWallet;
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getChainRecord", function (chainName) {
      var chainRecord = _this.chainRecords.find(function (c) {
        return c.name === chainName;
      });
      if (!chainRecord) {
        throw new Error("".concat(chainName, " is not provided!"));
      }
      return chainRecord;
    });
    // get chain logo
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getChainLogo", function (chainName) {
      var _chainRecord$assetLis, _chainRecord$assetLis2, _chainRecord$assetLis3, _chainRecord$assetLis4, _chainRecord$assetLis5, _chainRecord$assetLis6;
      var chainRecord = _this.getChainRecord(chainName);
      return (
        // until chain_registry fix this
        // chainRecord?.chain.logo_URIs?.svg ||
        // chainRecord?.chain.logo_URIs?.png ||
        // chainRecord?.chain.logo_URIs?.jpeg ||
        (chainRecord === null || chainRecord === void 0 ? void 0 : (_chainRecord$assetLis = chainRecord.assetList) === null || _chainRecord$assetLis === void 0 ? void 0 : (_chainRecord$assetLis2 = _chainRecord$assetLis.assets[0]) === null || _chainRecord$assetLis2 === void 0 ? void 0 : (_chainRecord$assetLis3 = _chainRecord$assetLis2.logo_URIs) === null || _chainRecord$assetLis3 === void 0 ? void 0 : _chainRecord$assetLis3.svg) || (chainRecord === null || chainRecord === void 0 ? void 0 : (_chainRecord$assetLis4 = chainRecord.assetList) === null || _chainRecord$assetLis4 === void 0 ? void 0 : (_chainRecord$assetLis5 = _chainRecord$assetLis4.assets[0]) === null || _chainRecord$assetLis5 === void 0 ? void 0 : (_chainRecord$assetLis6 = _chainRecord$assetLis5.logo_URIs) === null || _chainRecord$assetLis6 === void 0 ? void 0 : _chainRecord$assetLis6.png) || undefined
      );
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "getNameService", /*#__PURE__*/function () {
      var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(chainName) {
        var _chainName, registry;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (chainName) {
                _context.next = 9;
                break;
              }
              if (_this.defaultNameService) {
                _context.next = 3;
                break;
              }
              throw new Error('defaultNameService is undefined');
            case 3:
              registry = (0, _utils.getNameServiceRegistryFromName)(_this.defaultNameService);
              if (registry) {
                _context.next = 6;
                break;
              }
              throw new Error('Unknown defaultNameService ' + _this.defaultNameService);
            case 6:
              _chainName = registry.chainName;
              _context.next = 10;
              break;
            case 9:
              _chainName = chainName;
            case 10:
              _context.next = 12;
              return _this.getWalletRepo(_chainName).getNameService();
            case 12:
              return _context.abrupt("return", _context.sent);
            case 13:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }());
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_reconnect", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
      var _this$logger;
      var walletName, _this$activeRepos$;
      return _regenerator["default"].wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            (_this$logger = _this.logger) === null || _this$logger === void 0 ? void 0 : _this$logger.debug('[CORE EVENT] Emit `refresh_connection`');
            _this.coreEmitter.emit('refresh_connection');
            walletName = window.localStorage.getItem('cosmos-kit@1:core//current-wallet');
            if (!walletName) {
              _context2.next = 6;
              break;
            }
            _context2.next = 6;
            return (_this$activeRepos$ = _this.activeRepos[0]) === null || _this$activeRepos$ === void 0 ? void 0 : _this$activeRepos$.connect(walletName, true);
          case 6:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_restoreAccounts", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3() {
      var walletName, accountsStr, accounts;
      return _regenerator["default"].wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            walletName = window.localStorage.getItem('cosmos-kit@1:core//current-wallet');
            accountsStr = window.localStorage.getItem('cosmos-kit@1:core//accounts');
            if (walletName && accountsStr) {
              accounts = JSON.parse(accountsStr);
              accounts.forEach(function (data) {
                var mainWallet = _this.getMainWallet(walletName);
                mainWallet.activate();
                var chainWallet = mainWallet.getChainWalletList(false).find(function (w) {
                  return w.chainRecord.chain.chain_id === data.chainId && w.namespace === data.namespace;
                });
                chainWallet === null || chainWallet === void 0 ? void 0 : chainWallet.setData(data);
                chainWallet === null || chainWallet === void 0 ? void 0 : chainWallet.setState(_types.State.Done);
              });
            }
          case 3:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onMounted", /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6() {
      var parser, env;
      return _regenerator["default"].wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            if (!(typeof window === 'undefined')) {
              _context6.next = 2;
              break;
            }
            return _context6.abrupt("return");
          case 2:
            _this._restoreAccounts();
            parser = _bowser["default"].getParser(window.navigator.userAgent);
            env = {
              browser: parser.getBrowserName(true),
              device: parser.getPlatform().type || 'desktop',
              os: parser.getOSName(true)
            };
            _this.setEnv(env);
            _this.walletRepos.forEach(function (repo) {
              return repo.setEnv(env);
            });
            _this.mainWallets.forEach( /*#__PURE__*/function () {
              var _ref6 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(wallet) {
                var _wallet$emitter, _wallet$walletInfo$co, _wallet$walletInfo$co2;
                var _wallet$emitter2, _this$logger2, _wallet$emitter3, _this$logger3;
                return _regenerator["default"].wrap(function _callee5$(_context5) {
                  while (1) switch (_context5.prev = _context5.next) {
                    case 0:
                      wallet.setEnv(env);
                      (_wallet$emitter = wallet.emitter) === null || _wallet$emitter === void 0 ? void 0 : _wallet$emitter.emit('broadcast_env', env);
                      (_wallet$walletInfo$co = wallet.walletInfo.connectEventNamesOnWindow) === null || _wallet$walletInfo$co === void 0 ? void 0 : _wallet$walletInfo$co.forEach(function (eventName) {
                        window.addEventListener(eventName, _this._reconnect);
                      });
                      (_wallet$walletInfo$co2 = wallet.walletInfo.connectEventNamesOnClient) === null || _wallet$walletInfo$co2 === void 0 ? void 0 : _wallet$walletInfo$co2.forEach( /*#__PURE__*/function () {
                        var _ref7 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(eventName) {
                          var _wallet$client, _wallet$client$on;
                          return _regenerator["default"].wrap(function _callee4$(_context4) {
                            while (1) switch (_context4.prev = _context4.next) {
                              case 0:
                                (_wallet$client = wallet.client) === null || _wallet$client === void 0 ? void 0 : (_wallet$client$on = _wallet$client.on) === null || _wallet$client$on === void 0 ? void 0 : _wallet$client$on.call(_wallet$client, eventName, _this._reconnect);
                              case 1:
                              case "end":
                                return _context4.stop();
                            }
                          }, _callee4);
                        }));
                        return function (_x3) {
                          return _ref7.apply(this, arguments);
                        };
                      }());
                      if (!(wallet.walletInfo.mode === 'wallet-connect')) {
                        _context5.next = 11;
                        break;
                      }
                      _context5.next = 7;
                      return wallet.initClient(_this.walletConnectOptions);
                    case 7:
                      (_wallet$emitter2 = wallet.emitter) === null || _wallet$emitter2 === void 0 ? void 0 : _wallet$emitter2.emit('broadcast_client', wallet.client);
                      (_this$logger2 = _this.logger) === null || _this$logger2 === void 0 ? void 0 : _this$logger2.debug('[WALLET EVENT] Emit `broadcast_client`');
                      _context5.next = 15;
                      break;
                    case 11:
                      _context5.next = 13;
                      return wallet.initClient();
                    case 13:
                      (_wallet$emitter3 = wallet.emitter) === null || _wallet$emitter3 === void 0 ? void 0 : _wallet$emitter3.emit('broadcast_client', wallet.client);
                      (_this$logger3 = _this.logger) === null || _this$logger3 === void 0 ? void 0 : _this$logger3.debug('[WALLET EVENT] Emit `broadcast_client`');
                    case 15:
                    case "end":
                      return _context5.stop();
                  }
                }, _callee5);
              }));
              return function (_x2) {
                return _ref6.apply(this, arguments);
              };
            }());
          case 8:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    })));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onUnmounted", function () {
      if (typeof window === 'undefined') {
        return;
      }
      _this.mainWallets.forEach(function (wallet) {
        var _wallet$walletInfo$co3, _wallet$walletInfo$co4;
        (_wallet$walletInfo$co3 = wallet.walletInfo.connectEventNamesOnWindow) === null || _wallet$walletInfo$co3 === void 0 ? void 0 : _wallet$walletInfo$co3.forEach(function (eventName) {
          window.removeEventListener(eventName, _this._reconnect);
        });
        (_wallet$walletInfo$co4 = wallet.walletInfo.connectEventNamesOnClient) === null || _wallet$walletInfo$co4 === void 0 ? void 0 : _wallet$walletInfo$co4.forEach( /*#__PURE__*/function () {
          var _ref8 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(eventName) {
            var _wallet$client2, _wallet$client2$off;
            return _regenerator["default"].wrap(function _callee7$(_context7) {
              while (1) switch (_context7.prev = _context7.next) {
                case 0:
                  (_wallet$client2 = wallet.client) === null || _wallet$client2 === void 0 ? void 0 : (_wallet$client2$off = _wallet$client2.off) === null || _wallet$client2$off === void 0 ? void 0 : _wallet$client2$off.call(_wallet$client2, eventName, _this._reconnect);
                case 1:
                case "end":
                  return _context7.stop();
              }
            }, _callee7);
          }));
          return function (_x4) {
            return _ref8.apply(this, arguments);
          };
        }());
      });
    });
    _this.coreEmitter = new _events["default"]();
    _this.logger = logger;
    if (defaultNameService) _this.defaultNameService = defaultNameService;
    _this.session = new _utils.Session(_objectSpread({
      duration: 1800000,
      callback: function callback() {
        var _window;
        _this.mainWallets.forEach(function (w) {
          return w.disconnectAll(false);
        });
        (_window = window) === null || _window === void 0 ? void 0 : _window.localStorage.removeItem('cosmos-kit@1:core//accounts');
      }
    }, sessionOptions));
    _this.walletConnectOptions = walletConnectOptions;
    _this.init(_chains, _assetLists, wallets, walletConnectOptions, _signerOptions, endpointOptions);
    return _this;
  }
  (0, _createClass2["default"])(WalletManager, [{
    key: "init",
    value: function init(chains, assetLists, wallets, walletConnectOptions, signerOptions, endpointOptions) {
      var _this2 = this;
      this.logger.info("".concat(chains.length, " chains and ").concat(wallets.length, " wallets are provided!"));
      this.isLazy = endpointOptions === null || endpointOptions === void 0 ? void 0 : endpointOptions.isLazy;
      this.chainRecords = chains.map(function (chain) {
        var _endpointOptions$endp;
        return (0, _utils.convertChain)(chain, assetLists, signerOptions, endpointOptions === null || endpointOptions === void 0 ? void 0 : (_endpointOptions$endp = endpointOptions.endpoints) === null || _endpointOptions$endp === void 0 ? void 0 : _endpointOptions$endp[chain.chain_name], _this2.isLazy, _this2.logger);
      });
      this.mainWallets = wallets.map(function (wallet) {
        wallet.logger = _this2.logger;
        wallet.session = _this2.session;
        wallet.walletConnectOptions = _this2.walletConnectOptions;
        wallet.setChains(_this2.chainRecords);
        return wallet;
      });
      this.chainRecords.forEach(function (chainRecord) {
        var repo = new _repository.WalletRepo(chainRecord, wallets.map(function (_ref9) {
          var getChainWallet = _ref9.getChainWallet;
          return getChainWallet(chainRecord.name);
        }));
        repo.logger = _this2.logger;
        repo.repelWallet = _this2.repelWallet;
        repo.session = _this2.session;
        _this2.walletRepos.push(repo);
      });
    }
  }, {
    key: "setWalletRepel",
    value: function setWalletRepel(value) {
      var _window2;
      this.repelWallet = value;
      this.walletRepos.forEach(function (repo) {
        return repo.repelWallet = value;
      });
      (_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.localStorage.setItem('cosmos-kit@1:core//repel-wallet', value.toString());
    }
  }, {
    key: "activeRepos",
    get: function get() {
      return this.walletRepos.filter(function (repo) {
        return repo.isActive === true;
      });
    }
  }]);
  return WalletManager;
}(_bases.StateBase);
exports.WalletManager = WalletManager;