"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidEndpoint = exports.getIsLazy = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var isValidEndpoint = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(endpoint, isLazy, logger) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!isLazy) {
            _context.next = 3;
            break;
          }
          logger === null || logger === void 0 ? void 0 : logger.debug('Skipping test of accessibility for', endpoint);
          return _context.abrupt("return", true);
        case 3:
          logger === null || logger === void 0 ? void 0 : logger.debug('Testing accessibility of', endpoint);
          _context.prev = 4;
          if (!(typeof endpoint === 'string')) {
            _context.next = 11;
            break;
          }
          _context.next = 8;
          return fetch(endpoint);
        case 8:
          response = _context.sent;
          _context.next = 14;
          break;
        case 11:
          _context.next = 13;
          return fetch(endpoint.url, {
            headers: endpoint.headers
          });
        case 13:
          response = _context.sent;
        case 14:
          if (!(response.status == 200)) {
            _context.next = 17;
            break;
          }
          logger === null || logger === void 0 ? void 0 : logger.debug('Access successfully.');
          return _context.abrupt("return", true);
        case 17:
          _context.next = 21;
          break;
        case 19:
          _context.prev = 19;
          _context.t0 = _context["catch"](4);
        case 21:
          logger === null || logger === void 0 ? void 0 : logger.debug('Access failed.');
          return _context.abrupt("return", false);
        case 23:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[4, 19]]);
  }));
  return function isValidEndpoint(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
exports.isValidEndpoint = isValidEndpoint;
var getIsLazy = function getIsLazy(globalIsLazy, chainIsLazy, endpointIsLazy, parameterIsLazy, logger) {
  // logger?.debug(
  //   'Value of globalIsLazy, chainIsLazy, endpointIsLazy and parameterIsLazy:',
  //   globalIsLazy,
  //   chainIsLazy,
  //   endpointIsLazy,
  //   parameterIsLazy
  // );
  if (typeof parameterIsLazy !== 'undefined') {
    return parameterIsLazy;
  }
  if (typeof endpointIsLazy !== 'undefined') {
    return endpointIsLazy;
  }
  if (typeof chainIsLazy !== 'undefined') {
    return chainIsLazy;
  }
  if (typeof globalIsLazy !== 'undefined') {
    return globalIsLazy;
  }
  return false;
};
exports.getIsLazy = getIsLazy;