"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useWalletClient = void 0;
var _core = require("@cosmos-kit/core");
var _react = _interopRequireDefault(require("react"));
var _provider = require("../provider");
var useWalletClient = function useWalletClient(walletName) {
  var context = _react["default"].useContext(_provider.walletContext);
  if (!context) {
    throw new Error('You have forgot to use ChainProvider.');
  }
  var walletManager = context.walletManager;
  var mainWallet = walletName ? walletManager.getMainWallet(walletName) : walletManager.mainWallets.find(function (w) {
    return w.isActive;
  });
  if (!mainWallet) {
    return {
      client: void 0,
      status: _core.State.Init,
      message: void 0
    };
  }
  var clientMutable = mainWallet.clientMutable;
  return {
    client: clientMutable.data,
    status: clientMutable.state,
    message: clientMutable.message
  };
};
exports.useWalletClient = useWalletClient;