"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNameService = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _core = require("@cosmos-kit/core");
var _react = require("react");
var _useManager2 = require("./useManager");
var useNameService = function useNameService(name) {
  var _useState = (0, _react.useState)(_core.State.Pending),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var _useState3 = (0, _react.useState)(),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    ns = _useState4[0],
    setNS = _useState4[1];
  var _useState5 = (0, _react.useState)(),
    _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
    msg = _useState6[0],
    setMsg = _useState6[1];
  var _useManager = (0, _useManager2.useManager)(),
    defaultNameService = _useManager.defaultNameService,
    getNameService = _useManager.getNameService;
  var registry = (0, _react.useMemo)(function () {
    return (0, _core.getNameServiceRegistryFromName)(name || defaultNameService);
  }, [name]);
  if (!registry) {
    throw new Error('No such name service: ' + (name || defaultNameService));
  }
  (0, _react.useEffect)(function () {
    getNameService().then(function (ns) {
      setNS(ns);
      setState(_core.State.Done);
    })["catch"](function (e) {
      setMsg(e.message);
      setState(_core.State.Error);
    })["finally"](function () {
      if (state === 'Pending') {
        setState(_core.State.Init);
      }
    });
  }, [name]);
  return {
    state: state,
    data: ns,
    message: msg
  };
};
exports.useNameService = useNameService;