"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useManager = void 0;
var _react = _interopRequireDefault(require("react"));
var _provider = require("../provider");
var useManager = function useManager() {
  var context = _react["default"].useContext(_provider.walletContext);
  if (!context) {
    throw new Error('You have forgot to use ChainProvider.');
  }
  var _context$walletManage = context.walletManager,
    mainWallets = _context$walletManage.mainWallets,
    chainRecords = _context$walletManage.chainRecords,
    walletRepos = _context$walletManage.walletRepos,
    defaultNameService = _context$walletManage.defaultNameService,
    getChainRecord = _context$walletManage.getChainRecord,
    getWalletRepo = _context$walletManage.getWalletRepo,
    addChains = _context$walletManage.addChains,
    getChainLogo = _context$walletManage.getChainLogo,
    getNameService = _context$walletManage.getNameService,
    on = _context$walletManage.on,
    off = _context$walletManage.off;
  return {
    chainRecords: chainRecords,
    walletRepos: walletRepos,
    mainWallets: mainWallets,
    defaultNameService: defaultNameService,
    getChainRecord: getChainRecord,
    getWalletRepo: getWalletRepo,
    addChains: addChains,
    getChainLogo: getChainLogo,
    getNameService: getNameService,
    on: on,
    off: off
  };
};
exports.useManager = useManager;