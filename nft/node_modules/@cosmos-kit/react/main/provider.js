"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChainProvider = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _core = require("@cosmos-kit/core");
var _reactLite = require("@cosmos-kit/react-lite");
var _react = _interopRequireWildcard(require("react"));
var _ = require(".");
var _components = require("./modal/components");
var _views = require("./modal/components/views");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ChainProvider = function ChainProvider(_ref) {
  var chains = _ref.chains,
    assetLists = _ref.assetLists,
    wallets = _ref.wallets,
    walletModal = _ref.walletModal,
    modalTheme = _ref.modalTheme,
    modalViews = _ref.modalViews,
    _ref$includeAllWallet = _ref.includeAllWalletsOnMobile,
    includeAllWalletsOnMobile = _ref$includeAllWallet === void 0 ? false : _ref$includeAllWallet,
    _ref$wrappedWithChakr = _ref.wrappedWithChakra,
    wrappedWithChakra = _ref$wrappedWithChakr === void 0 ? false : _ref$wrappedWithChakr,
    _ref$defaultNameServi = _ref.defaultNameService,
    defaultNameService = _ref$defaultNameServi === void 0 ? 'icns' : _ref$defaultNameServi,
    walletConnectOptions = _ref.walletConnectOptions,
    signerOptions = _ref.signerOptions,
    endpointOptions = _ref.endpointOptions,
    sessionOptions = _ref.sessionOptions,
    _ref$logLevel = _ref.logLevel,
    logLevel = _ref$logLevel === void 0 ? 'WARN' : _ref$logLevel,
    children = _ref.children;
  var logger = (0, _react.useMemo)(function () {
    return new _core.Logger(logLevel);
  }, []);
  if (wrappedWithChakra && modalTheme) {
    logger.warn('Your are suggesting there already been a Chakra Theme active in higher level (with `wrappedWithChakra` is true). `modalTheme` will not work in this case.');
  }
  var getChainProvider = function getChainProvider(modal) {
    return /*#__PURE__*/_react["default"].createElement(_reactLite.ChainProvider, {
      chains: chains,
      assetLists: assetLists,
      wallets: wallets,
      walletModal: modal,
      defaultNameService: defaultNameService,
      walletConnectOptions: walletConnectOptions,
      signerOptions: signerOptions,
      endpointOptions: endpointOptions,
      sessionOptions: sessionOptions,
      logLevel: logLevel
    }, children);
  };
  if (walletModal) {
    logger.debug('Using provided wallet modal.');
    return getChainProvider(walletModal);
  }
  logger.debug('Using default wallet modal.');
  var defaultModal = (0, _react.useCallback)(function (props) {
    return /*#__PURE__*/_react["default"].createElement(_.WalletModal, (0, _extends2["default"])({}, props, {
      modalViews: _objectSpread(_objectSpread({}, _views.defaultModalViews), modalViews),
      includeAllWalletsOnMobile: includeAllWalletsOnMobile
    }));
  }, [_views.defaultModalViews]);
  if (wrappedWithChakra) {
    logger.debug('Wrap with <ChakraProviderWithOuterTheme>.');
    return /*#__PURE__*/_react["default"].createElement(_components.ChakraProviderWithOuterTheme, {
      logger: logger
    }, getChainProvider(defaultModal));
  } else {
    logger.debug('Wrap with <ChakraProviderWithGivenTheme>.');
    return /*#__PURE__*/_react["default"].createElement(_components.ChakraProviderWithGivenTheme, {
      theme: modalTheme,
      logger: logger
    }, getChainProvider(defaultModal));
  }
};
exports.ChainProvider = ChainProvider;