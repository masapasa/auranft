import { ChakraProvider } from '@chakra-ui/react';
import { ThemeProvider } from '@cosmology-ui/react';
import { ThemeContext } from '@emotion/react';
import { useContext, useMemo } from 'react';
import { addSemanticTokens, noCssResetTheme } from '../theme';
import React from 'react';
export function ChakraProviderWithOuterTheme({
  logger,
  children
}) {
  const outerTheme = useContext(ThemeContext);
  const theme = useMemo(() => addSemanticTokens(outerTheme), [outerTheme]);

  // logger?.debug('[WalletModal] ChakraProvider `theme`:', theme);
  // logger?.debug('[WalletModal] ChakraProvider `resetCSS`:', true);

  return /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(ChakraProvider, {
    theme: theme,
    resetCSS: true
  }, children));
}
export function ChakraProviderWithGivenTheme({
  theme,
  logger,
  children
}) {
  const _theme = useMemo(() => {
    if (theme) {
      return addSemanticTokens(theme);
    } else {
      return noCssResetTheme;
    }
  }, [theme]);

  // logger?.debug('[WalletModal] ChakraProvider `theme`:', _theme);
  // logger?.debug('[WalletModal] ChakraProvider `resetCSS`:', false);

  return /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(ChakraProvider, {
    theme: _theme,
    resetCSS: false
  }, children));
}