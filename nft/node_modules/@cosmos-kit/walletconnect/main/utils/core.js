"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CoreUtil = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE';
var CoreUtil = {
  isHttpUrl: function isHttpUrl(url) {
    return url.startsWith('http://') || url.startsWith('https://');
  },
  formatNativeUrl: function formatNativeUrl(appUrl, wcUri, os, name) {
    if (CoreUtil.isHttpUrl(appUrl)) {
      return this.formatUniversalUrl(appUrl, wcUri, name);
    }
    var plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '');
    CoreUtil.setWalletConnectDeepLink(plainAppUrl, name);
    var encodedWcUrl = encodeURIComponent(wcUri);
    return "".concat(plainAppUrl, "://wc?uri=").concat(encodedWcUrl);
  },
  formatUniversalUrl: function formatUniversalUrl(appUrl, wcUri, name) {
    if (!CoreUtil.isHttpUrl(appUrl)) {
      return this.formatNativeUrl(appUrl, wcUri, name);
    }
    var plainAppUrl = appUrl;
    if (appUrl.endsWith('/')) {
      plainAppUrl = appUrl.slice(0, -1);
    }
    CoreUtil.setWalletConnectDeepLink(plainAppUrl, name);
    var encodedWcUrl = encodeURIComponent(wcUri);
    return "".concat(plainAppUrl, "/wc?uri=").concat(encodedWcUrl);
  },
  wait: function wait(miliseconds) {
    return (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", new Promise(function (resolve) {
              setTimeout(resolve, miliseconds);
            }));
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }))();
  },
  openHref: function openHref(href) {
    var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '_self';
    window.open(href, target, 'noreferrer noopener');
  },
  setWalletConnectDeepLink: function setWalletConnectDeepLink(href, name) {
    localStorage.setItem(WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({
      href: href,
      name: name
    }));
  },
  removeWalletConnectDeepLink: function removeWalletConnectDeepLink() {
    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE);
  }
};
exports.CoreUtil = CoreUtil;