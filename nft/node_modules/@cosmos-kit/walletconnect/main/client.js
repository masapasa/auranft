"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WCClient = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _core = require("@cosmos-kit/core");
var _signClient = _interopRequireDefault(require("@walletconnect/sign-client"));
var _utils = require("@walletconnect/utils");
var _long = _interopRequireDefault(require("long"));
var _utils2 = require("./utils");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var EXPLORER_API = 'https://explorer-api.walletconnect.com';
var WCClient = /*#__PURE__*/function () {
  function WCClient(walletInfo) {
    (0, _classCallCheck2["default"])(this, WCClient);
    (0, _defineProperty2["default"])(this, "walletInfo", void 0);
    (0, _defineProperty2["default"])(this, "signClient", void 0);
    (0, _defineProperty2["default"])(this, "wcCloudInfo", void 0);
    // info from WalletConnect Cloud Explorer
    (0, _defineProperty2["default"])(this, "actions", void 0);
    (0, _defineProperty2["default"])(this, "qrUrl", void 0);
    (0, _defineProperty2["default"])(this, "appUrl", void 0);
    (0, _defineProperty2["default"])(this, "pairings", []);
    (0, _defineProperty2["default"])(this, "sessions", []);
    (0, _defineProperty2["default"])(this, "emitter", void 0);
    (0, _defineProperty2["default"])(this, "logger", void 0);
    (0, _defineProperty2["default"])(this, "options", void 0);
    (0, _defineProperty2["default"])(this, "relayUrl", void 0);
    (0, _defineProperty2["default"])(this, "env", void 0);
    if (!walletInfo.walletconnect) {
      throw new Error("'walletconnect' info for wallet ".concat(walletInfo.prettyName, " is not provided in wallet registry."));
    }
    this.walletInfo = walletInfo;
    this.qrUrl = {
      state: _core.State.Init
    };
    this.appUrl = {
      state: _core.State.Init
    };
  }
  (0, _createClass2["default"])(WCClient, [{
    key: "isMobile",
    get: function get() {
      var _this$env;
      return ((_this$env = this.env) === null || _this$env === void 0 ? void 0 : _this$env.device) === 'mobile';
    }

    // walletconnect wallet name
  }, {
    key: "wcName",
    get: function get() {
      return this.walletInfo.walletconnect.name;
    }

    // wallet defined bytes encoding
  }, {
    key: "wcEncoding",
    get: function get() {
      return this.walletInfo.walletconnect.encoding || 'hex';
    }

    // walletconnect wallet project id
  }, {
    key: "wcProjectId",
    get: function get() {
      return this.walletInfo.walletconnect.projectId;
    }

    // walletconnect wallet mobile link
  }, {
    key: "wcMobile",
    get: function get() {
      return this.walletInfo.walletconnect.mobile;
    }
  }, {
    key: "accounts",
    get: function get() {
      var accounts = [];
      this.sessions.forEach(function (s) {
        Object.entries(s.namespaces).forEach(function (_ref) {
          var _ref2 = (0, _slicedToArray2["default"])(_ref, 2),
            nsValue = _ref2[1];
          nsValue.accounts.forEach(function (account) {
            var _account$split = account.split(':'),
              _account$split2 = (0, _slicedToArray2["default"])(_account$split, 3),
              namespace = _account$split2[0],
              chainId = _account$split2[1],
              address = _account$split2[2];
            accounts.push({
              namespace: namespace,
              chainId: chainId,
              address: address
            });
          });
        });
      });
      return accounts;
    }
  }, {
    key: "deleteSession",
    value: function deleteSession(topic) {
      var _this$emitter, _this$logger;
      var chainIds = [];
      this.sessions = this.sessions.filter(function (s) {
        if (s.topic === topic) {
          s.namespaces.cosmos.accounts.forEach(function (account) {
            var _account$split3 = account.split(':'),
              _account$split4 = (0, _slicedToArray2["default"])(_account$split3, 2),
              chainId = _account$split4[1];
            chainIds.push(chainId);
          });
          return false;
        } else {
          return true;
        }
      });
      (_this$emitter = this.emitter) === null || _this$emitter === void 0 ? void 0 : _this$emitter.emit('reset', chainIds);
      (_this$logger = this.logger) === null || _this$logger === void 0 ? void 0 : _this$logger.debug('[WALLET EVENT] Emit `reset`');
    }
  }, {
    key: "subscribeToEvents",
    value: function subscribeToEvents() {
      var _this = this;
      if (typeof this.signClient === 'undefined') {
        throw new Error('WalletConnect is not initialized');
      }
      this.signClient.on('session_ping', function (args) {
        var _this$logger2;
        (_this$logger2 = _this.logger) === null || _this$logger2 === void 0 ? void 0 : _this$logger2.debug('EVENT', 'session_ping', args);
      });
      this.signClient.on('session_event', /*#__PURE__*/function () {
        var _ref3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(args) {
          var _this$logger3;
          return _regenerator["default"].wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                (_this$logger3 = _this.logger) === null || _this$logger3 === void 0 ? void 0 : _this$logger3.debug('EVENT', 'session_event', args);
                // const {
                //   topic,
                //   params: { event, chainId },
                // } = args;
                // if (this.session?.topic != topic) return;
                // if (event.name === 'accountsChanged') {
                //   await this.connect(
                //     this.accounts.map(([, chainId]) => chainId),
                //     false
                //   );
                // }
              case 1:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        return function (_x) {
          return _ref3.apply(this, arguments);
        };
      }());
      this.signClient.on('session_update', function (_ref4) {
        var _this$logger4;
        var topic = _ref4.topic,
          params = _ref4.params;
        (_this$logger4 = _this.logger) === null || _this$logger4 === void 0 ? void 0 : _this$logger4.debug('EVENT', 'session_update', {
          topic: topic,
          params: params
        });
        // if (this.session?.topic != topic) return;

        // const { namespaces } = params;
        // const _session = this.signClient.session.get(topic);
        // this.session = { ..._session, namespaces };
      });

      this.signClient.on('session_delete', function (args) {
        var _this$logger5;
        (_this$logger5 = _this.logger) === null || _this$logger5 === void 0 ? void 0 : _this$logger5.debug('EVENT', 'session_delete', args);
        _this.deleteSession(args.topic);
      });
      this.signClient.on('session_expire', function (args) {
        var _this$logger6;
        (_this$logger6 = _this.logger) === null || _this$logger6 === void 0 ? void 0 : _this$logger6.debug('EVENT', 'session_expire', args);
        _this.deleteSession(args.topic);
      });
      this.signClient.on('session_proposal', function (args) {
        var _this$logger7;
        (_this$logger7 = _this.logger) === null || _this$logger7 === void 0 ? void 0 : _this$logger7.debug('EVENT', 'session_proposal', args);
      });
      this.signClient.on('session_request', function (args) {
        var _this$logger8;
        (_this$logger8 = _this.logger) === null || _this$logger8 === void 0 ? void 0 : _this$logger8.debug('EVENT', 'session_request', args);
      });
      this.signClient.on('proposal_expire', function (args) {
        var _this$logger9;
        (_this$logger9 = _this.logger) === null || _this$logger9 === void 0 ? void 0 : _this$logger9.debug('EVENT', 'proposal_expire', args);
      });
    }
  }, {
    key: "deleteInactivePairings",
    value: function () {
      var _deleteInactivePairings = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
        var _iterator, _step, _this$logger10, pairing;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(typeof this.signClient === 'undefined')) {
                _context2.next = 2;
                break;
              }
              throw new Error('WalletConnect is not initialized');
            case 2:
              _iterator = _createForOfIteratorHelper(this.signClient.pairing.getAll({
                active: false
              }));
              _context2.prev = 3;
              _iterator.s();
            case 5:
              if ((_step = _iterator.n()).done) {
                _context2.next = 12;
                break;
              }
              pairing = _step.value;
              _context2.next = 9;
              return this.signClient.pairing["delete"](pairing.topic, {
                code: 7001,
                message: 'Clear inactive pairings.'
              });
            case 9:
              (_this$logger10 = this.logger) === null || _this$logger10 === void 0 ? void 0 : _this$logger10.debug('Delete inactive pairing:', pairing.topic);
            case 10:
              _context2.next = 5;
              break;
            case 12:
              _context2.next = 17;
              break;
            case 14:
              _context2.prev = 14;
              _context2.t0 = _context2["catch"](3);
              _iterator.e(_context2.t0);
            case 17:
              _context2.prev = 17;
              _iterator.f();
              return _context2.finish(17);
            case 20:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[3, 14, 17, 20]]);
      }));
      function deleteInactivePairings() {
        return _deleteInactivePairings.apply(this, arguments);
      }
      return deleteInactivePairings;
    }()
  }, {
    key: "restorePairings",
    value: function restorePairings() {
      var _this2 = this,
        _this$logger11;
      if (typeof this.signClient === 'undefined') {
        throw new Error('WalletConnect is not initialized');
      }
      this.pairings = this.signClient.pairing.getAll({
        active: true
      }).filter(function (p) {
        var _p$peerMetadata;
        return ((_p$peerMetadata = p.peerMetadata) === null || _p$peerMetadata === void 0 ? void 0 : _p$peerMetadata.name) === _this2.wcName && p.expiry * 1000 > Date.now() + 1000;
      });
      (_this$logger11 = this.logger) === null || _this$logger11 === void 0 ? void 0 : _this$logger11.debug('RESTORED PAIRINGS: ', this.pairings);
    }
  }, {
    key: "pairing",
    get: function get() {
      return this.pairings[0];
    }
  }, {
    key: "restoreSessions",
    value: function restoreSessions() {
      var _this3 = this,
        _this$logger12;
      if (typeof this.signClient === 'undefined') {
        throw new Error('WalletConnect is not initialized');
      }
      this.sessions = this.signClient.session.getAll().filter(function (s) {
        return s.peer.metadata.name === _this3.wcName && s.expiry * 1000 > Date.now() + 1000;
      });
      (_this$logger12 = this.logger) === null || _this$logger12 === void 0 ? void 0 : _this$logger12.debug('RESTORED SESSIONS: ', this.sessions);
    }
  }, {
    key: "getSession",
    value: function getSession(namespace, chainId) {
      return this.sessions.find(function (s) {
        var _s$namespaces$namespa, _s$namespaces$namespa2;
        return (_s$namespaces$namespa = s.namespaces[namespace]) === null || _s$namespaces$namespa === void 0 ? void 0 : (_s$namespaces$namespa2 = _s$namespaces$namespa.accounts) === null || _s$namespaces$namespa2 === void 0 ? void 0 : _s$namespaces$namespa2.find(function (account) {
          return account.startsWith("".concat(namespace, ":").concat(chainId));
        });
      });
    }
  }, {
    key: "walletName",
    get: function get() {
      return this.walletInfo.name;
    }
  }, {
    key: "dappProjectId",
    get: function get() {
      var _this$options;
      return (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.signClient.projectId;
    }
  }, {
    key: "setActions",
    value: function setActions(actions) {
      this.actions = actions;
    }
  }, {
    key: "setQRState",
    value: function setQRState(state) {
      var _this$actions, _this$actions$qrUrl;
      this.qrUrl.state = state;
      (_this$actions = this.actions) === null || _this$actions === void 0 ? void 0 : (_this$actions$qrUrl = _this$actions.qrUrl) === null || _this$actions$qrUrl === void 0 ? void 0 : _this$actions$qrUrl.state(state);
    }
  }, {
    key: "setQRError",
    value: function setQRError(e) {
      var _this$actions2, _this$actions2$qrUrl, _this$actions2$qrUrl$;
      this.setQRState(_core.State.Error);
      this.qrUrl.message = typeof e === 'string' ? e : e === null || e === void 0 ? void 0 : e.message;
      (_this$actions2 = this.actions) === null || _this$actions2 === void 0 ? void 0 : (_this$actions2$qrUrl = _this$actions2.qrUrl) === null || _this$actions2$qrUrl === void 0 ? void 0 : (_this$actions2$qrUrl$ = _this$actions2$qrUrl.message) === null || _this$actions2$qrUrl$ === void 0 ? void 0 : _this$actions2$qrUrl$.call(_this$actions2$qrUrl, this.qrUrl.message);
      if (typeof e !== 'string' && e !== null && e !== void 0 && e.stack) {
        var _this$logger13;
        (_this$logger13 = this.logger) === null || _this$logger13 === void 0 ? void 0 : _this$logger13.error(e.stack);
      }
    }
  }, {
    key: "init",
    value: function () {
      var _init = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3() {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return this.initSignClient();
            case 2:
              if (!this.isMobile) {
                _context3.next = 5;
                break;
              }
              _context3.next = 5;
              return this.initAppUrl();
            case 5:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "initSignClient",
    value: function () {
      var _initSignClient = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
        var _this$options2, _this$options3, _this$options4, _this$logger14, _this$logger15, _this$options5;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              if (!(this.signClient && this.relayUrl === ((_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.signClient.relayUrl))) {
                _context4.next = 2;
                break;
              }
              return _context4.abrupt("return");
            case 2:
              _context4.next = 4;
              return _signClient["default"].init((_this$options3 = this.options) === null || _this$options3 === void 0 ? void 0 : _this$options3.signClient);
            case 4:
              this.signClient = _context4.sent;
              this.relayUrl = (_this$options4 = this.options) === null || _this$options4 === void 0 ? void 0 : _this$options4.signClient.relayUrl;
              (_this$logger14 = this.logger) === null || _this$logger14 === void 0 ? void 0 : _this$logger14.debug('CREATED CLIENT: ', this.signClient);
              (_this$logger15 = this.logger) === null || _this$logger15 === void 0 ? void 0 : _this$logger15.debug('relayerRegion ', (_this$options5 = this.options) === null || _this$options5 === void 0 ? void 0 : _this$options5.signClient.relayUrl);
              this.subscribeToEvents();
              this.restorePairings();
              this.restoreSessions();
            case 11:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function initSignClient() {
        return _initSignClient.apply(this, arguments);
      }
      return initSignClient;
    }()
  }, {
    key: "initWCCloudInfo",
    value: function () {
      var _initWCCloudInfo = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5() {
        var _this$walletInfo$wall, _this$logger16;
        var fetcUrl, fetched;
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              fetcUrl = "".concat(EXPLORER_API, "/v3/wallets?projectId=").concat(this.dappProjectId, "&sdks=sign_v2&search=").concat(this.wcName);
              _context5.next = 3;
              return fetch(fetcUrl);
            case 3:
              _context5.next = 5;
              return _context5.sent.json();
            case 5:
              fetched = _context5.sent;
              this.wcCloudInfo = fetched.listings[(_this$walletInfo$wall = this.walletInfo.walletconnect) === null || _this$walletInfo$wall === void 0 ? void 0 : _this$walletInfo$wall.projectId];
              (_this$logger16 = this.logger) === null || _this$logger16 === void 0 ? void 0 : _this$logger16.debug('WalletConnect Info:', this.wcCloudInfo);
            case 8:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function initWCCloudInfo() {
        return _initWCCloudInfo.apply(this, arguments);
      }
      return initWCCloudInfo;
    }()
  }, {
    key: "initAppUrl",
    value: function () {
      var _initAppUrl = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6() {
        var _this$wcMobile, _this$wcMobile2;
        var _native, universal;
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              this.appUrl.state = _core.State.Pending;
              if (this.wcCloudInfo) {
                _context6.next = 4;
                break;
              }
              _context6.next = 4;
              return this.initWCCloudInfo();
            case 4:
              _native = this.wcCloudInfo.mobile["native"] || ((_this$wcMobile = this.wcMobile) === null || _this$wcMobile === void 0 ? void 0 : _this$wcMobile["native"]);
              universal = this.wcCloudInfo.mobile.universal || ((_this$wcMobile2 = this.wcMobile) === null || _this$wcMobile2 === void 0 ? void 0 : _this$wcMobile2.universal);
              this.appUrl.data = {
                "native": _native,
                universal: universal
              };
              this.appUrl.state = _core.State.Done;
            case 8:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function initAppUrl() {
        return _initAppUrl.apply(this, arguments);
      }
      return initAppUrl;
    }()
  }, {
    key: "nativeUrl",
    get: function get() {
      var _this$appUrl$data, _this$env3;
      var _native2 = (_this$appUrl$data = this.appUrl.data) === null || _this$appUrl$data === void 0 ? void 0 : _this$appUrl$data["native"];
      if (typeof _native2 === 'string' || typeof _native2 === 'undefined') {
        return _native2;
      } else {
        var _this$env2;
        var android = _native2.android,
          ios = _native2.ios,
          macos = _native2.macos,
          windows = _native2.windows;
        switch ((_this$env2 = this.env) === null || _this$env2 === void 0 ? void 0 : _this$env2.os) {
          case 'android':
            return android;
          case 'ios':
            return ios;
          case 'macos':
            return macos;
          case 'windows':
            return windows;
          default:
            throw new Error("Unknown os: ".concat((_this$env3 = this.env) === null || _this$env3 === void 0 ? void 0 : _this$env3.os, "."));
        }
      }
    }
  }, {
    key: "universalUrl",
    get: function get() {
      var _this$appUrl$data2;
      return (_this$appUrl$data2 = this.appUrl.data) === null || _this$appUrl$data2 === void 0 ? void 0 : _this$appUrl$data2.universal;
    }
  }, {
    key: "redirectHref",
    get: function get() {
      return this.nativeUrl || this.universalUrl;
    }
  }, {
    key: "redirectHrefWithWCUri",
    get: function get() {
      var href;
      if (this.nativeUrl) {
        var _this$env4;
        href = (this.walletInfo.walletconnect.formatNativeUrl || _utils2.CoreUtil.formatNativeUrl)(this.nativeUrl, this.qrUrl.data, (_this$env4 = this.env) === null || _this$env4 === void 0 ? void 0 : _this$env4.os, this.walletName);
      } else if (this.universalUrl) {
        href = (this.walletInfo.walletconnect.formatUniversalUrl || _utils2.CoreUtil.formatUniversalUrl)(this.universalUrl, this.qrUrl.data, this.walletName);
      }
      return href;
    }
  }, {
    key: "displayQRCode",
    get: function get() {
      if (this.pairing || this.redirect) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "redirect",
    get: function get() {
      return Boolean(this.isMobile && (this.nativeUrl || this.universalUrl));
    }
  }, {
    key: "openApp",
    value: function openApp() {
      var withWCUri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var href = withWCUri ? this.redirectHrefWithWCUri : this.redirectHref;
      if (href) {
        var _this$logger17;
        (_this$logger17 = this.logger) === null || _this$logger17 === void 0 ? void 0 : _this$logger17.debug('Redirecting:', href);
        _utils2.CoreUtil.openHref(href);
      } else {
        var _this$logger18;
        (_this$logger18 = this.logger) === null || _this$logger18 === void 0 ? void 0 : _this$logger18.error('No redirecting href.');
      }
    }
  }, {
    key: "connect",
    value: function () {
      var _connect = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(chainIds) {
        var _this$logger19;
        var chainIdsWithNS, pairing, requiredNamespaces, connectResp, _this$logger20, _this$logger21, _this$logger22, _this$logger23, session, _this$logger24;
        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              if (!(typeof this.signClient === 'undefined')) {
                _context7.next = 2;
                break;
              }
              throw new Error('WalletConnect is not initialized');
            case 2:
              if (this.qrUrl.state !== 'Init') {
                this.setQRState(_core.State.Init);
              }
              chainIdsWithNS = typeof chainIds === 'string' ? ["cosmos:".concat(chainIds)] : chainIds.map(function (chainId) {
                return "cosmos:".concat(chainId);
              });
              this.restorePairings();
              pairing = this.pairing;
              (_this$logger19 = this.logger) === null || _this$logger19 === void 0 ? void 0 : _this$logger19.debug('Restored active pairing topic is:', pairing === null || pairing === void 0 ? void 0 : pairing.topic);
              if (this.displayQRCode) this.setQRState(_core.State.Pending);
              requiredNamespaces = {
                cosmos: {
                  methods: ['cosmos_getAccounts', 'cosmos_signAmino', 'cosmos_signDirect'],
                  chains: chainIdsWithNS,
                  events: ['chainChanged', 'accountsChanged']
                }
              };
              _context7.prev = 9;
              (_this$logger20 = this.logger) === null || _this$logger20 === void 0 ? void 0 : _this$logger20.debug('Connecting chains:', chainIdsWithNS);
              _context7.next = 13;
              return this.signClient.connect({
                pairingTopic: pairing === null || pairing === void 0 ? void 0 : pairing.topic,
                requiredNamespaces: requiredNamespaces
              });
            case 13:
              connectResp = _context7.sent;
              // https://github.com/cosmology-tech/projects-issues/issues/349
              // Commented out because of the issue above.
              // if (typeof connectResp.uri === 'undefined') {
              //   throw new Error('Failed to generate WalletConnect URI!');
              // }

              this.qrUrl.data = connectResp.uri;
              (_this$logger21 = this.logger) === null || _this$logger21 === void 0 ? void 0 : _this$logger21.debug('Using QR URI:', connectResp.uri);
              if (this.displayQRCode) this.setQRState(_core.State.Done);
              _context7.next = 24;
              break;
            case 19:
              _context7.prev = 19;
              _context7.t0 = _context7["catch"](9);
              (_this$logger22 = this.logger) === null || _this$logger22 === void 0 ? void 0 : _this$logger22.error('Client connect error: ', _context7.t0);
              if (this.displayQRCode) this.setQRError(_context7.t0);
              return _context7.abrupt("return");
            case 24:
              if (this.redirect) this.openApp();
              _context7.prev = 25;
              _context7.next = 28;
              return connectResp.approval();
            case 28:
              session = _context7.sent;
              (_this$logger23 = this.logger) === null || _this$logger23 === void 0 ? void 0 : _this$logger23.debug('Established session:', session);
              this.sessions.push(session);
              this.restorePairings();
              _context7.next = 49;
              break;
            case 34:
              _context7.prev = 34;
              _context7.t1 = _context7["catch"](25);
              (_this$logger24 = this.logger) === null || _this$logger24 === void 0 ? void 0 : _this$logger24.error('Session approval error: ', _context7.t1);
              _context7.next = 39;
              return this.deleteInactivePairings();
            case 39:
              if (_context7.t1) {
                _context7.next = 44;
                break;
              }
              if (this.displayQRCode) this.setQRError(_core.ExpiredError);
              throw new Error('Proposal Expired');
            case 44:
              if (!(_context7.t1.code == 5001)) {
                _context7.next = 48;
                break;
              }
              throw _core.RejectedError;
            case 48:
              throw _context7.t1;
            case 49:
              _context7.prev = 49;
              if (!pairing && this.qrUrl.message !== _core.ExpiredError.message) {
                this.setQRState(_core.State.Init);
              }
              return _context7.finish(49);
            case 52:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this, [[9, 19], [25, 34, 49, 52]]);
      }));
      function connect(_x2) {
        return _connect.apply(this, arguments);
      }
      return connect;
    }()
  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8() {
        var _this$emitter2, _this$logger25;
        var _iterator2, _step2, session, _this$logger26, _this$logger27;
        return _regenerator["default"].wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              if (!(typeof this.signClient === 'undefined')) {
                _context8.next = 2;
                break;
              }
              throw new Error('WalletConnect is not initialized');
            case 2:
              if (!(this.sessions.length === 0)) {
                _context8.next = 4;
                break;
              }
              return _context8.abrupt("return");
            case 4:
              _iterator2 = _createForOfIteratorHelper(this.sessions);
              _context8.prev = 5;
              _iterator2.s();
            case 7:
              if ((_step2 = _iterator2.n()).done) {
                _context8.next = 20;
                break;
              }
              session = _step2.value;
              _context8.prev = 9;
              (_this$logger26 = this.logger) === null || _this$logger26 === void 0 ? void 0 : _this$logger26.debug('Delete session:', session);
              _context8.next = 13;
              return this.signClient.disconnect({
                topic: session.topic,
                reason: (0, _utils.getSdkError)('USER_DISCONNECTED')
              });
            case 13:
              _context8.next = 18;
              break;
            case 15:
              _context8.prev = 15;
              _context8.t0 = _context8["catch"](9);
              (_this$logger27 = this.logger) === null || _this$logger27 === void 0 ? void 0 : _this$logger27.error("SignClient.disconnect session ".concat(session.topic, " failed:"), _context8.t0);
            case 18:
              _context8.next = 7;
              break;
            case 20:
              _context8.next = 25;
              break;
            case 22:
              _context8.prev = 22;
              _context8.t1 = _context8["catch"](5);
              _iterator2.e(_context8.t1);
            case 25:
              _context8.prev = 25;
              _iterator2.f();
              return _context8.finish(25);
            case 28:
              this.sessions = [];
              (_this$emitter2 = this.emitter) === null || _this$emitter2 === void 0 ? void 0 : _this$emitter2.emit('sync_disconnect');
              (_this$logger25 = this.logger) === null || _this$logger25 === void 0 ? void 0 : _this$logger25.debug('[WALLET EVENT] Emit `sync_disconnect`');
            case 31:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this, [[5, 22, 25, 28], [9, 15]]);
      }));
      function disconnect() {
        return _disconnect.apply(this, arguments);
      }
      return disconnect;
    }()
  }, {
    key: "getSimpleAccount",
    value: function () {
      var _getSimpleAccount = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(chainId) {
        var account;
        return _regenerator["default"].wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              account = this.accounts.find(function (_ref5) {
                var id = _ref5.chainId;
                return id === chainId;
              });
              if (account) {
                _context9.next = 3;
                break;
              }
              throw new Error("Chain ".concat(chainId, " is not connected yet, please check the session approval namespaces"));
            case 3:
              return _context9.abrupt("return", account);
            case 4:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function getSimpleAccount(_x3) {
        return _getSimpleAccount.apply(this, arguments);
      }
      return getSimpleAccount;
    }()
  }, {
    key: "getOfflineSignerAmino",
    value: function getOfflineSignerAmino(chainId) {
      var _this4 = this;
      return {
        getAccounts: function () {
          var _getAccounts = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10() {
            return _regenerator["default"].wrap(function _callee10$(_context10) {
              while (1) switch (_context10.prev = _context10.next) {
                case 0:
                  _context10.next = 2;
                  return _this4.getAccount(chainId);
                case 2:
                  _context10.t0 = _context10.sent;
                  return _context10.abrupt("return", [_context10.t0]);
                case 4:
                case "end":
                  return _context10.stop();
              }
            }, _callee10);
          }));
          function getAccounts() {
            return _getAccounts.apply(this, arguments);
          }
          return getAccounts;
        }(),
        signAmino: function signAmino(signerAddress, signDoc) {
          return _this4.signAmino(chainId, signerAddress, signDoc);
        }
      };
    }
  }, {
    key: "getOfflineSignerDirect",
    value: function getOfflineSignerDirect(chainId) {
      var _this5 = this;
      return {
        getAccounts: function () {
          var _getAccounts2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11() {
            return _regenerator["default"].wrap(function _callee11$(_context11) {
              while (1) switch (_context11.prev = _context11.next) {
                case 0:
                  _context11.next = 2;
                  return _this5.getAccount(chainId);
                case 2:
                  _context11.t0 = _context11.sent;
                  return _context11.abrupt("return", [_context11.t0]);
                case 4:
                case "end":
                  return _context11.stop();
              }
            }, _callee11);
          }));
          function getAccounts() {
            return _getAccounts2.apply(this, arguments);
          }
          return getAccounts;
        }(),
        signDirect: function signDirect(signerAddress, signDoc) {
          return _this5.signDirect(chainId, signerAddress, signDoc);
        }
      };
    }
  }, {
    key: "getOfflineSigner",
    value: function () {
      var _getOfflineSigner = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(chainId, preferredSignType) {
        var _this$getOfflineSigne;
        return _regenerator["default"].wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              if (!(preferredSignType === 'amino' && this.getOfflineSignerAmino)) {
                _context12.next = 2;
                break;
              }
              return _context12.abrupt("return", this.getOfflineSignerAmino(chainId));
            case 2:
              if (!(preferredSignType === 'direct' && this.getOfflineSignerDirect)) {
                _context12.next = 4;
                break;
              }
              return _context12.abrupt("return", this.getOfflineSignerDirect(chainId));
            case 4:
              return _context12.abrupt("return", this.getOfflineSignerAmino ? (_this$getOfflineSigne = this.getOfflineSignerAmino) === null || _this$getOfflineSigne === void 0 ? void 0 : _this$getOfflineSigne.call(this, chainId) : this.getOfflineSignerDirect(chainId));
            case 5:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
      function getOfflineSigner(_x4, _x5) {
        return _getOfflineSigner.apply(this, arguments);
      }
      return getOfflineSigner;
    }()
  }, {
    key: "_getAccount",
    value: function () {
      var _getAccount2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee13(chainId) {
        var _this$logger28;
        var session, resp;
        return _regenerator["default"].wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              session = this.getSession('cosmos', chainId);
              if (session) {
                _context13.next = 3;
                break;
              }
              throw new Error("Session for ".concat(chainId, " not established yet."));
            case 3:
              _context13.next = 5;
              return this.signClient.request({
                topic: session.topic,
                chainId: "cosmos:".concat(chainId),
                request: {
                  method: 'cosmos_getAccounts',
                  params: {}
                }
              });
            case 5:
              resp = _context13.sent;
              (_this$logger28 = this.logger) === null || _this$logger28 === void 0 ? void 0 : _this$logger28.debug("Response of cosmos_getAccounts", resp);
              return _context13.abrupt("return", resp);
            case 8:
            case "end":
              return _context13.stop();
          }
        }, _callee13, this);
      }));
      function _getAccount(_x6) {
        return _getAccount2.apply(this, arguments);
      }
      return _getAccount;
    }()
  }, {
    key: "getAccount",
    value: function () {
      var _getAccount3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee14(chainId) {
        var _ref6, address, algo, pubkey;
        return _regenerator["default"].wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _context14.next = 2;
              return this._getAccount(chainId);
            case 2:
              _ref6 = _context14.sent[0];
              address = _ref6.address;
              algo = _ref6.algo;
              pubkey = _ref6.pubkey;
              return _context14.abrupt("return", {
                address: address,
                algo: algo,
                pubkey: new Uint8Array(Buffer.from(pubkey, this.wcEncoding))
              });
            case 7:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
      function getAccount(_x7) {
        return _getAccount3.apply(this, arguments);
      }
      return getAccount;
    }()
  }, {
    key: "_signAmino",
    value: function () {
      var _signAmino2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee15(chainId, signer, signDoc, signOptions) {
        var _this$logger29;
        var session, resp;
        return _regenerator["default"].wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              session = this.getSession('cosmos', chainId);
              if (session) {
                _context15.next = 3;
                break;
              }
              throw new Error("Session for ".concat(chainId, " not established yet."));
            case 3:
              if (this.redirect) this.openApp();
              _context15.next = 6;
              return this.signClient.request({
                topic: session.topic,
                chainId: "cosmos:".concat(chainId),
                request: {
                  method: 'cosmos_signAmino',
                  params: {
                    signerAddress: signer,
                    signDoc: signDoc
                  }
                }
              });
            case 6:
              resp = _context15.sent;
              (_this$logger29 = this.logger) === null || _this$logger29 === void 0 ? void 0 : _this$logger29.debug("Response of cosmos_signAmino", resp);
              return _context15.abrupt("return", resp);
            case 9:
            case "end":
              return _context15.stop();
          }
        }, _callee15, this);
      }));
      function _signAmino(_x8, _x9, _x10, _x11) {
        return _signAmino2.apply(this, arguments);
      }
      return _signAmino;
    }()
  }, {
    key: "signAmino",
    value: function () {
      var _signAmino3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee16(chainId, signer, signDoc, signOptions) {
        var result;
        return _regenerator["default"].wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this._signAmino(chainId, signer, signDoc, signOptions);
            case 2:
              result = _context16.sent;
              return _context16.abrupt("return", result);
            case 4:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
      function signAmino(_x12, _x13, _x14, _x15) {
        return _signAmino3.apply(this, arguments);
      }
      return signAmino;
    }()
  }, {
    key: "_signDirect",
    value: function () {
      var _signDirect2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee17(chainId, signer, signDoc, signOptions) {
        var _this$logger30;
        var session, signDocValue, resp;
        return _regenerator["default"].wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              session = this.getSession('cosmos', chainId);
              if (session) {
                _context17.next = 3;
                break;
              }
              throw new Error("Session for ".concat(chainId, " not established yet."));
            case 3:
              signDocValue = {
                signerAddress: signer,
                signDoc: {
                  chainId: signDoc.chainId,
                  bodyBytes: Buffer.from(signDoc.bodyBytes).toString(this.wcEncoding),
                  authInfoBytes: Buffer.from(signDoc.authInfoBytes).toString(this.wcEncoding),
                  accountNumber: signDoc.accountNumber.toString()
                }
              };
              if (this.redirect) this.openApp();
              _context17.next = 7;
              return this.signClient.request({
                topic: session.topic,
                chainId: "cosmos:".concat(chainId),
                request: {
                  method: 'cosmos_signDirect',
                  params: signDocValue
                }
              });
            case 7:
              resp = _context17.sent;
              (_this$logger30 = this.logger) === null || _this$logger30 === void 0 ? void 0 : _this$logger30.debug("Response of cosmos_signDirect", resp);
              return _context17.abrupt("return", resp);
            case 10:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this);
      }));
      function _signDirect(_x16, _x17, _x18, _x19) {
        return _signDirect2.apply(this, arguments);
      }
      return _signDirect;
    }()
  }, {
    key: "signDirect",
    value: function () {
      var _signDirect3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee18(chainId, signer, signDoc, signOptions) {
        var _ref7, signed, signature;
        return _regenerator["default"].wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              _context18.next = 2;
              return this._signDirect(chainId, signer, signDoc, signOptions);
            case 2:
              _ref7 = _context18.sent;
              signed = _ref7.signed;
              signature = _ref7.signature;
              return _context18.abrupt("return", {
                signed: {
                  chainId: signed.chainId,
                  accountNumber: _long["default"].fromString(signed.accountNumber, false),
                  authInfoBytes: new Uint8Array(Buffer.from(signed.authInfoBytes, this.wcEncoding)),
                  bodyBytes: new Uint8Array(Buffer.from(signed.bodyBytes, this.wcEncoding))
                },
                signature: signature
              });
            case 6:
            case "end":
              return _context18.stop();
          }
        }, _callee18, this);
      }));
      function signDirect(_x20, _x21, _x22, _x23) {
        return _signDirect3.apply(this, arguments);
      }
      return signDirect;
    }() // restoreLatestSession() {
    //   if (typeof this.signClient === 'undefined') {
    //     throw new Error('WalletConnect is not initialized');
    //   }
    //   if (typeof this.session !== 'undefined') return;
    //   const targetKey = this.signClient.session.keys.reverse().find((key) => {
    //     const session = this.signClient.session.get(key);
    //     return (
    //       session.peer.metadata.name === this.walletWCName &&
    //       session.expiry * 1000 > Date.now() + 1000
    //     );
    //   });
    //   if (targetKey) {
    //     this.session = this.signClient.session.get(targetKey);
    //     this.logger?.debug('RESTORED LATEST SESSION:', this.session);
    //   }
    // }
  }]);
  return WCClient;
}();
exports.WCClient = WCClient;