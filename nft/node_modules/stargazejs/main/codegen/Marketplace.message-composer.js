"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarketplaceMessageComposer = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _tx = require("cosmjs-types/cosmwasm/wasm/v1/tx");
var _encoding = require("@cosmjs/encoding");
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/var MarketplaceMessageComposer = /*#__PURE__*/(0, _createClass2["default"])(function MarketplaceMessageComposer(sender, contractAddress) {
  var _this = this;
  (0, _classCallCheck2["default"])(this, MarketplaceMessageComposer);
  (0, _defineProperty2["default"])(this, "sender", void 0);
  (0, _defineProperty2["default"])(this, "contractAddress", void 0);
  (0, _defineProperty2["default"])(this, "setAsk", function (_ref, _funds) {
    var collection = _ref.collection,
      expires = _ref.expires,
      findersFeeBps = _ref.findersFeeBps,
      fundsRecipient = _ref.fundsRecipient,
      price = _ref.price,
      reserveFor = _ref.reserveFor,
      saleType = _ref.saleType,
      tokenId = _ref.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          set_ask: {
            collection: collection,
            expires: expires,
            finders_fee_bps: findersFeeBps,
            funds_recipient: fundsRecipient,
            price: price,
            reserve_for: reserveFor,
            sale_type: saleType,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeAsk", function (_ref2, _funds) {
    var collection = _ref2.collection,
      tokenId = _ref2.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_ask: {
            collection: collection,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "updateAskPrice", function (_ref3, _funds) {
    var collection = _ref3.collection,
      price = _ref3.price,
      tokenId = _ref3.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          update_ask_price: {
            collection: collection,
            price: price,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "setBid", function (_ref4, _funds) {
    var collection = _ref4.collection,
      expires = _ref4.expires,
      finder = _ref4.finder,
      findersFeeBps = _ref4.findersFeeBps,
      saleType = _ref4.saleType,
      tokenId = _ref4.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          set_bid: {
            collection: collection,
            expires: expires,
            finder: finder,
            finders_fee_bps: findersFeeBps,
            sale_type: saleType,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "buyNow", function (_ref5, _funds) {
    var collection = _ref5.collection,
      expires = _ref5.expires,
      finder = _ref5.finder,
      findersFeeBps = _ref5.findersFeeBps,
      tokenId = _ref5.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          buy_now: {
            collection: collection,
            expires: expires,
            finder: finder,
            finders_fee_bps: findersFeeBps,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeBid", function (_ref6, _funds) {
    var collection = _ref6.collection,
      tokenId = _ref6.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_bid: {
            collection: collection,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "acceptBid", function (_ref7, _funds) {
    var bidder = _ref7.bidder,
      collection = _ref7.collection,
      finder = _ref7.finder,
      tokenId = _ref7.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          accept_bid: {
            bidder: bidder,
            collection: collection,
            finder: finder,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "rejectBid", function (_ref8, _funds) {
    var bidder = _ref8.bidder,
      collection = _ref8.collection,
      tokenId = _ref8.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          reject_bid: {
            bidder: bidder,
            collection: collection,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "setCollectionBid", function (_ref9, _funds) {
    var collection = _ref9.collection,
      expires = _ref9.expires,
      findersFeeBps = _ref9.findersFeeBps;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          set_collection_bid: {
            collection: collection,
            expires: expires,
            finders_fee_bps: findersFeeBps
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeCollectionBid", function (_ref10, _funds) {
    var collection = _ref10.collection;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_collection_bid: {
            collection: collection
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "acceptCollectionBid", function (_ref11, _funds) {
    var bidder = _ref11.bidder,
      collection = _ref11.collection,
      finder = _ref11.finder,
      tokenId = _ref11.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          accept_collection_bid: {
            bidder: bidder,
            collection: collection,
            finder: finder,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "syncAsk", function (_ref12, _funds) {
    var collection = _ref12.collection,
      tokenId = _ref12.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          sync_ask: {
            collection: collection,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeStaleAsk", function (_ref13, _funds) {
    var collection = _ref13.collection,
      tokenId = _ref13.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_stale_ask: {
            collection: collection,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeStaleBid", function (_ref14, _funds) {
    var bidder = _ref14.bidder,
      collection = _ref14.collection,
      tokenId = _ref14.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_stale_bid: {
            bidder: bidder,
            collection: collection,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeStaleCollectionBid", function (_ref15, _funds) {
    var bidder = _ref15.bidder,
      collection = _ref15.collection;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_stale_collection_bid: {
            bidder: bidder,
            collection: collection
          }
        })),
        funds: _funds
      })
    };
  });
  this.sender = sender;
  this.contractAddress = contractAddress;
  this.setAsk = this.setAsk.bind(this);
  this.removeAsk = this.removeAsk.bind(this);
  this.updateAskPrice = this.updateAskPrice.bind(this);
  this.setBid = this.setBid.bind(this);
  this.buyNow = this.buyNow.bind(this);
  this.removeBid = this.removeBid.bind(this);
  this.acceptBid = this.acceptBid.bind(this);
  this.rejectBid = this.rejectBid.bind(this);
  this.setCollectionBid = this.setCollectionBid.bind(this);
  this.removeCollectionBid = this.removeCollectionBid.bind(this);
  this.acceptCollectionBid = this.acceptCollectionBid.bind(this);
  this.syncAsk = this.syncAsk.bind(this);
  this.removeStaleAsk = this.removeStaleAsk.bind(this);
  this.removeStaleBid = this.removeStaleBid.bind(this);
  this.removeStaleCollectionBid = this.removeStaleCollectionBid.bind(this);
});
exports.MarketplaceMessageComposer = MarketplaceMessageComposer;