"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VendingMinterWlFlexMessageComposer = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _tx = require("cosmjs-types/cosmwasm/wasm/v1/tx");
var _encoding = require("@cosmjs/encoding");
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/var VendingMinterWlFlexMessageComposer = /*#__PURE__*/(0, _createClass2["default"])(function VendingMinterWlFlexMessageComposer(sender, contractAddress) {
  var _this = this;
  (0, _classCallCheck2["default"])(this, VendingMinterWlFlexMessageComposer);
  (0, _defineProperty2["default"])(this, "sender", void 0);
  (0, _defineProperty2["default"])(this, "contractAddress", void 0);
  (0, _defineProperty2["default"])(this, "mint", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          mint: {}
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "setWhitelist", function (_ref, _funds) {
    var whitelist = _ref.whitelist;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          set_whitelist: {
            whitelist: whitelist
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "purge", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          purge: {}
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "updateMintPrice", function (_ref2, _funds) {
    var price = _ref2.price;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          update_mint_price: {
            price: price
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "updateStartTime", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          update_start_time: {}
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "updateStartTradingTime", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          update_start_trading_time: {}
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "updatePerAddressLimit", function (_ref3, _funds) {
    var perAddressLimit = _ref3.perAddressLimit;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          update_per_address_limit: {
            per_address_limit: perAddressLimit
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "mintTo", function (_ref4, _funds) {
    var recipient = _ref4.recipient;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          mint_to: {
            recipient: recipient
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "mintFor", function (_ref5, _funds) {
    var recipient = _ref5.recipient,
      tokenId = _ref5.tokenId;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          mint_for: {
            recipient: recipient,
            token_id: tokenId
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "shuffle", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          shuffle: {}
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "burnRemaining", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          burn_remaining: {}
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "updateDiscountPrice", function (_ref6, _funds) {
    var price = _ref6.price;
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          update_discount_price: {
            price: price
          }
        })),
        funds: _funds
      })
    };
  });
  (0, _defineProperty2["default"])(this, "removeDiscountPrice", function (_funds) {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: _tx.MsgExecuteContract.fromPartial({
        sender: _this.sender,
        contract: _this.contractAddress,
        msg: (0, _encoding.toUtf8)(JSON.stringify({
          remove_discount_price: {}
        })),
        funds: _funds
      })
    };
  });
  this.sender = sender;
  this.contractAddress = contractAddress;
  this.mint = this.mint.bind(this);
  this.setWhitelist = this.setWhitelist.bind(this);
  this.purge = this.purge.bind(this);
  this.updateMintPrice = this.updateMintPrice.bind(this);
  this.updateStartTime = this.updateStartTime.bind(this);
  this.updateStartTradingTime = this.updateStartTradingTime.bind(this);
  this.updatePerAddressLimit = this.updatePerAddressLimit.bind(this);
  this.mintTo = this.mintTo.bind(this);
  this.mintFor = this.mintFor.bind(this);
  this.shuffle = this.shuffle.bind(this);
  this.burnRemaining = this.burnRemaining.bind(this);
  this.updateDiscountPrice = this.updateDiscountPrice.bind(this);
  this.removeDiscountPrice = this.removeDiscountPrice.bind(this);
});
exports.VendingMinterWlFlexMessageComposer = VendingMinterWlFlexMessageComposer;