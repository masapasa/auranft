/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { MsgExecuteContractEncodeObject } from "@cosmjs/cosmwasm-stargate";
import { Coin, Timestamp } from "./ReserveAuction.types";
export interface ReserveAuctionMessage {
    contractAddress: string;
    sender: string;
    createAuction: ({ collection, endTime, reservePrice, sellerFundsRecipient, startTime, tokenId }: {
        collection: string;
        endTime: Timestamp;
        reservePrice: Coin;
        sellerFundsRecipient?: string;
        startTime: Timestamp;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    updateReservePrice: ({ collection, reservePrice, tokenId }: {
        collection: string;
        reservePrice: Coin;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    cancelAuction: ({ collection, tokenId }: {
        collection: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    placeBid: ({ collection, tokenId }: {
        collection: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    settleAuction: ({ collection, tokenId }: {
        collection: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class ReserveAuctionMessageComposer implements ReserveAuctionMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    createAuction: ({ collection, endTime, reservePrice, sellerFundsRecipient, startTime, tokenId }: {
        collection: string;
        endTime: Timestamp;
        reservePrice: Coin;
        sellerFundsRecipient?: string;
        startTime: Timestamp;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    updateReservePrice: ({ collection, reservePrice, tokenId }: {
        collection: string;
        reservePrice: Coin;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    cancelAuction: ({ collection, tokenId }: {
        collection: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    placeBid: ({ collection, tokenId }: {
        collection: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    settleAuction: ({ collection, tokenId }: {
        collection: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
